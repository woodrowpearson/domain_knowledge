% terraform, cli

% docker, cli

# Expose ports

% bash, shell

# Summing all numbers in the third column of a text file
awk '{ x += $3 } END { print x }' myfile

% awscli, aws

# Install AWS CLI
sudo apt-get install -y python-dev python-pip \
sudo pip install awscli \
aws --version \
aws configure

% cloudtrail, aws

# list all trails
aws cloudtrail describe-trails

# list all S3 buckets
aws s3 ls

# create a new trail
aws cloudtrail create-subscription \
    --name <awslog> \
    --s3-new-bucket <bucket_name>

# list the names of all trails
aws cloudtrail describe-trails --output text | cut -f 8

# get the status of a trail
aws cloudtrail get-trail-status \
    --name <awslog>

# delete a trail
aws cloudtrail delete-trail \
    --name <awslog>

# delete the S3 bucket of a trail
aws s3 rb s3://<bucket_name> --force

# add tags to a trail, up to 10 tags
aws cloudtrail add-tags \
    --resource-id <awslog> \
    --tags-list "Key=log-type,Value=all"

# list the tags of a trail
aws cloudtrail list-tags \
    --resource-id-list 

# remove a tag from a trail
aws cloudtrail remove-tags \
    --resource-id <awslog> \
    --tags-list "Key=log-type,Value=all"

% iam, aws

# list all user's info
aws iam list-users

# list all user's usernames
aws iam list-users --output text | cut -f 6

# list current users info
aws iam get-user

# list current user's access keys
aws iam list-access-keys

# crate new user
aws iam create-user \
    --user-name <new_user>

# create multiple new users, from a file
allUsers=$(cat ./<filename>.txt) \
for userName in $allUsers; do \
    aws iam create-user \
        --user-name $userName \
done

# list all users
aws iam list-users --no-paginate

# get a specific users info
aws iam get-user \
    --user-name <username>

# delete one user
aws iam delete-user \
    --user-name <username>

# delete all users
# allUsers=$(aws iam list-users --output text | cut -f 6); \
allUsers=$(cat ./<filename>.txt) \
for userName in $allUsers; do \
    aws iam delete-user \
        --user-name $userName \
done


% password policy, aws

# list password policy aws awscli
aws iam get-account-password-policy


% access key, aws

# list all access keys
aws iam list-access-keys

# list access keys of a specific user
aws iam list-access-keys \
    --user-name <username>

# create a new access key
aws iam create-access-key \
    --user-name <username> \
    --output text | tee <output_file>.txt

# list last access time of an access key
aws iam get-access-key-last-used \
    --access-key-id <access_key>

# deactivate an acccss key
aws iam update-access-key \
    --access-key-id <access_key> \
    --status Inactive \
    --user-name <username>

# delete an access key
aws iam delete-access-key \
    --access-key-id <access_key> \
    --user-name <username>



% groups, policies, managed policies, aws

# list all groups aws
aws iam list-groups

# create a group aws
aws iam create-group --group-name <group_name>

# delete a group aws
aws iam delete-group \
    --group-name <group_name>

# list all policies
aws iam list-policies

# get a specific policy
aws iam get-policy \
    --policy-arn <value>

# list all users, groups, and roles, for a given policy
aws iam list-entities-for-policy \
    --policy-arn <value>

# list policies, for a given group
aws iam list-attached-group-policies \
    --group-name <group_name>

# add a policy to a group
aws iam attach-group-policy \
    --group-name <group_name> \
    --policy-arn arn:aws:iam::aws:policy/<policy_name>

# add a user to a group
aws iam add-user-to-group \
    --group-name <group_name> \
    --user-name <user_name>

# list users, for a given group aws
aws iam get-group \
    --group-name <group_name>

# list groups, for a given user
aws iam list-groups-for-user \
    --user-name <user_name>

# remove a user from a group
aws iam remove-user-from-group \
    --group-name <group_name> \
    --user-name <user_name>

# remove a policy from a group
aws iam detach-group-policy \
    --group-name <group_name> \
    --policy-arn arn:aws:iam::aws:policy/<policy_name>

# delete a group
aws iam delete-group \
    --group-name <group_name>
